#!/usr/bin/env sh

# suppress 'command not found' errors
type sudo >/dev/null 2>&1 || sudo() { :; }
type vcpkg >/dev/null 2>&1 || USE_LOCAL_VCPKG=1
type vcpkg >/dev/null 2>&1 || vcpkg() { :; }

export ZIGSDL='./deps/SDL.zig'
export ZIGPATCHFILEPATH="$ZIGSDL/src/wrapper/sdl.zig"

DISTRO_NAME=$(eval "(lsb_release -ds || cat /etc/*release || uname -om) 2>/dev/null" | head -n1 | sed -e 's/PRETTY_NAME=//' -e 's/"//g' -e 's/ /-/g' -e 's/\//-/g')

if [ ! -e "$ZIGSDL" ]; then
  echo installing/patching SDL wrapper
  mkdir -p ./deps
  cd ./deps
  git clone https://github.com/MasterQ32/SDL.zig.git
  cd ..

  export SUBST_STR='s|pub const c = @import("sdl-native");|// zig-game hack...\n// pub const c = @import("sdl-native");\npub const c = @cImport({\n    @cInclude("SDL2/SDL.h");\n    @cInclude("SDL2/SDL_ttf.h");\n});|g'

  if [ ! "$DISTRO_NAME" = "${DISTRO_NAME#Darwin}" ]; then
    sed -i '' -e "$SUBST_STR" $ZIGPATCHFILEPATH
  else
    sed -i -e "$SUBST_STR" $ZIGPATCHFILEPATH
  fi
  echo patched $ZIGPATCHFILEPATH
else
  echo "$ZIGSDL exists, not patching $ZIGPATCHFILEPATH"
fi

if [ -z "$USE_LOCAL_VCPKG" ]; then
  echo "using system vcpkg"
  vcpkg install
  exit
fi

[ "$DISTRO_NAME" != "${DISTRO_NAME#x86_64-Msys}" ] && export VCPKG_DEFAULT_TRIPLET=x64-windows
[ "$DISTRO_NAME" != "${DISTRO_NAME#Darwin-x86_64}" ] && export VCPKG_DEFAULT_TRIPLET=x64-osx
# TODO: use less-brittle DISTRO_NAME, this is a hack which assumes x84 architecture
#[ "$DISTRO_NAME" != "${DISTRO_NAME#Debian-GNU-Linux}" ] && export VCPKG_DEFAULT_TRIPLET=x64-linux # disabled - build tooling needs work

if [ -z "$VCPKG_DEFAULT_TRIPLET" ]; then
  if [ ! "$DISTRO_NAME" = "${DISTRO_NAME#Debian}" ]; then
    echo installing dependencies for debian
    sudo apt-get install -y libsdl2-dev libsdl2-ttf-dev libsdl2-mixer-dev
    sudo apt-get install -y libogg-dev libvorbis-dev
    # WSL2/Debian dependencies
    sudo apt-get install -y automake libfreetype-dev libfreetype6 libfreetype6-dev libharfbuzz-dev
    exit
  fi
  echo unhandled distro: $DISTRO_NAME
  exit
fi

echo "using local vcpkg"
if [ ! -d vcpkg ]; then
  git clone https://github.com/microsoft/vcpkg
  ./vcpkg/bootstrap-vcpkg.sh -disableMetrics
fi
cd vcpkg && ./vcpkg install
